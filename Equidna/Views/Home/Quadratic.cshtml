@{
    ViewBag.Title = "Modelo cuadrático (Sin decimales)";
}

<div id="vamosachecar">
    
</div>
<div class="col-xs-4">
    <h1>Modelo cuadrático</h1>
</div>

    <!--<div><h1 id="FormulaDisplayDiv" style="text-align: center; font-family: 'Walter Turncoat', cursive; font-size: 250%"> </h1></div>
    -->   
    <div class="eq-c stec" align="left" data-toggle="validator">
        <i>x</i>(t) =
        <div class="fraction">
            <span class="fup" id="nuevo"><i><input id="nom1" type="number" min="-99" max="99" style="text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; " onchange="updateFromNumberfraction();" value="0" /> </i></span>

            <span class="fdn" id="nuevo2"><i><input id="nom2" type="number" min="-99" max="99" style="text-align: center;  width:50px; border: none " onchange="updateFromNumberfraction();" value="1" /></i></span>
        </div>

        +
        <div class="fraction">
            <span class="fup" id="nuevo5"><i> <input id="tre1" type="number" min="-99" max="99" style="text-align: center;width:50px; border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0;" value="0" onchange="updateFromNumberfraction();" /></i></span>

            <span class="fdn" id="nuevo6"><i><input id="tre2" type="number" min="-99" max="99" style="text-align: center ;width:50px ; border: none;" onchange="updateFromNumberfraction();" value="1" /></i></span>
        </div>
        t
        +
        <div class="fraction">
            <span class="fup" id="nuevo3"><i> <input id="den1" type="number" min="-99" max="99" style="text-align: center;width:50px; border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0;" value="1" onchange="updateFromNumberfraction();" /></i></span>

            <span class="fdn" id="nuevo4"><i><input id="den2" type="number" min="-99" max="99" style="text-align: center ;width:50px ; border: none;" onchange="updateFromNumberfraction();" value="1"/></i></span>
        </div>
        t<sup>2</sup>
        =
        <i id="vamoaver1">
            
        </i>
        
        <i id="vamoaver3">
            
        </i>
        <i id="vamoaver2">

        </i>
    </div>
    
    <!--
    <div class="col-xs-12 " align="center">
        <input id="number3" type="number" step="0.01" onchange="updateFromNumber();" />
        <input id="number2" type="number" step="0.01" onchange="updateFromNumber();" />
        <input id="number" type="number" step="0.01" onchange="updateFromNumber();" />
    </div>
    -->
   


<div class="row" align="center">
    <section class="color-7" id="btn-click">
        <div class="col-xs-12">
            <div id="sliderBox" class="jxgbox" style="width: 100%; height: 200px; user-select: none; overflow: hidden; position: relative;"></div>
        </div>
            <label for="startTime">Start time: <input name="startTime" type="number" value="0" min="-99" max="99" style="text-align: center; width: 30%;" readonly /></label>
            <label for="endTime">End time: <input name="endTime" type="number" min="-99" max="99" style="text-align: center; width: 30%;" value="0" /></label>

            <button id="start" onclick="Start()" class="btn btn-7 btn-7a icon-truck">Start</button>
        
    </section>
</div>


<div class="row">
    <div class="col-xs-8">
        <div id='VelocityBoard' class='jxgbox graphbox' style='user-select: none; overflow: hidden; position: relative;'></div>
    </div>

    <div class="col-xs-4">
        <div class="row">
            <div class="panel panel-default">
         
                <table class="table table-striped ">
                    <thead>
                        <tr>
                            <td colspan="2" class="text-center" style="background-color:#17aa56">Valores Iniciales</td>
                        </tr>
                        <tr>
                            <td class="col-xs-6"><input type="text" id="tiempo" class="form-control" style="text-align: center" value="t=0" readonly /></td>
                            <td class="col-xs-6">
                                <i id="velocidad" style="font-size: 18px">

                                </i>
                            </td>
                        </tr>


                        <tr>
                            <td colspan="2" style="background-color: #17aa56; text-align: center">Representación Numérica</td>
                        </tr>

                    <tr>
                        <th class="text-center" style="background-color: red; color: white;">t</th>
                        <th class="text-center" style="background-color: red; color: white;">v</th>

                    </tr>
                    </thead>
                    <tbody >
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x1" name='x1' step="0.01" class="form-control" style="text-align: center" />


                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx1" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x2" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx2" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x3" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx3" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x4" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx4" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x5" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx5" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x6" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx6" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x7" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx7" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x8" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx8" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
    
<div class="row">
    <div class="col-xs-8">
        <div id='PositionBoard' class='jxgbox graphbox' style='user-select: none; overflow: hidden; position: relative;'></div>
    </div>

    <div class="col-xs-4">
        <div class="row">
            <div class="panel panel-default">
                <table class="table table-striped ">
                    <thead>
                        <tr>
                            <td colspan="2" class="text-center" style="background-color:#17aa56">Valores Iniciales</td>
                        </tr>
                        <tr>
                            <td class="col-xs-6"> <input type="text" id="tiempo" class="form-control" style="text-align: center" value="t=0" readonly /></td>
                            <td class="col-xs-6">
                                <i id="posicion11" style="font-size: 18px">

                                </i>

                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="background-color: #17aa56;text-align: center"> Representación Numérica</td>
                        </tr>
                    <tr>
                        <th class="text-center" style="background-color: blue; color: white;">t</th>
                        <th class="text-center" style="background-color: blue; color: white;">x</th>

                    </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy1" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y1" name='x1' step="0.01" class="form-control" style="text-align: center" />

                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy2" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y2" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy3" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y3" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy4" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y4" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy5" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y5" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy6" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y6" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy7" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y7" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy8" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y8" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>

<script>
			var buttons7Click = Array.prototype.slice.call( document.querySelectorAll( '#btn-click button' ) ),
				buttons9Click = Array.prototype.slice.call( document.querySelectorAll( 'button.btn-8g' ) ),
				totalButtons7Click = buttons7Click.length,
				totalButtons9Click = buttons9Click.length;

			buttons7Click.forEach( function( el, i ) { el.addEventListener( 'click', activate, false ); } );
			buttons9Click.forEach( function( el, i ) { el.addEventListener( 'click', activate, false ); } );

			function activate() {
				var self = this, activatedClass = 'btn-activated';

				if( classie.has( this, 'btn-7h' ) ) {
					// if it is the first of the two btn-7h then activatedClass = 'btn-error';
					// if it is the second then activatedClass = 'btn-success'
					activatedClass = buttons7Click.indexOf( this ) === totalButtons7Click-2 ? 'btn-error' : 'btn-success';
				}
				else if( classie.has( this, 'btn-8g' ) ) {
					// if it is the first of the two btn-8g then activatedClass = 'btn-success3d';
					// if it is the second then activatedClass = 'btn-error3d'
					activatedClass = buttons9Click.indexOf( this ) === totalButtons9Click-2 ? 'btn-success3d' : 'btn-error3d';
				}

				if( !classie.has( this, activatedClass ) ) {
					classie.add( this, activatedClass );
					setTimeout( function() { classie.remove( self, activatedClass ) }, 1000 );
				}
			}


</script>
<script type='text/javascript'>
    





   
    var currentTime = 0;
    var interval;
    var timeInterval = 50;
    var guidingLine;
    var guidingLine2;
    var maxX = 9, minX = -1, maxY = 9, minY = -2;
    var startButton = document.getElementById("start");
    var numberField = document.getElementById("number");
    var numberField2 = document.getElementById("number2");
    var numberField3 = document.getElementById("number3");
    var numtable = document.getElementById("table1");
    var numtable2 = document.getElementById("table2");
    var numtable3 = document.getElementById("table3");
    var value;
    var fraccionuno = document.getElementById("nom1");
    var fraccionunode = document.getElementById("nom2");
    var fracciondos = document.getElementById("den1");
    var fracciondosde = document.getElementById("den2");
    var fracciontres = document.getElementById("tre1");
    var fracciontresde = document.getElementById("tre2");
    var vamoaver1 = document.getElementById("vamoaver1");
    var vamoaver2 = document.getElementById("vamoaver2");
    var vamoaver3 = document.getElementById("vamoaver3");
    var valorvelocidad = document.getElementById("velocidad");
    var valorposicion = document.getElementById("posicion11");
    var headk = document.getElementById("vamosachecar");
    var final;

    var lado = true;

    var firstUpdate = true;



    function updateFromNumberfraction() {
        if(firstUpdate) {
            firstUpdate = false;

        if (fraccionunode.value == 0) {
            alert("MENSAJE: ERROR");
            fraccionunode.value = -1;

        }
        if (fracciondosde.value == 0) {
            alert("MENSAJE: ERROR");
            fracciondosde.value = -1;

        }
        if (fracciontresde.value == 0) {
            alert("MENSAJE: ERROR");
            fracciontresde.value = -1;

        }

        if (fraccionunode.value != fraccionuno.value && fraccionunode.value < 0 && fraccionuno.value < 0) {
            fraccionunode.value = Math.abs(fraccionunode.value);
            fraccionuno.value = Math.abs(fraccionuno.value);
        }

        if (fracciondos.value != fracciondosde.value && fracciondos.value < 0 && fracciondosde.value < 0) {
            fracciondos.value = Math.abs(fracciondos.value);
            fracciondosde.value = Math.abs(fracciondosde.value);
        }
        if (fracciontresde.value != fracciontres.value && fracciontresde.value < 0 && fracciontres.value < 0) {
            fracciontresde.value = Math.abs(fracciontresde.value);
            fracciontres.value = Math.abs(fracciontres.value);
        }
        var deno = parseFloat(fraccionuno.value / fraccionunode.value);
        var nomi = parseFloat(fracciondos.value / fracciondosde.value);
        var nominatre = parseFloat(fracciontres.value / fracciontresde.value);

        //uno
        if (deno - Math.floor(deno) === 0) {
            if (deno != 0) {
                if (deno == 1) {
                    vamoaver1.innerHTML = "1";
                    valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= 1";
                    //  valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + "1";
                }
                else if (deno == -1) {
                    vamoaver1.innerHTML = "-1";
                    valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= -1";
                    //valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + "-1";
                }
                else {
                    if (deno < 0) {
                        vamoaver1.innerHTML = deno.toString();
                        valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + deno.toString();
                        //  valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + deno.toString();

                    } else {
                        vamoaver1.innerHTML = deno.toString();
                        valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + deno.toString();
                        //valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + deno.toString();
                    }

                }


            }
            else {
                vamoaver1.innerHTML = "";
                valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= 0";
                // valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= 0";
            }

        }
        else {

            if (fraccionuno.value < 0 || fraccionunode.value < 0) {
                vamoaver1
.innerHTML =
"<a>-</a><div class='fraction'><span class='fup' ><i><input id='ju' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='je' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                var jj = document.getElementById("ju");
                var jjj = document.getElementById("je");
                jj.value = Math.abs(fraccionuno.value);
                jjj.value = Math.abs(fraccionunode.value);

                valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + "<a> - </a> <div class='fraction'><span class='fup' ><i><input id='valpo' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='valso' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                var varpo = document.getElementById("valpo");
                var varpofa = document.getElementById("valso");
                varpo.value = Math.abs(fraccionuno.value);
                varpofa.value = Math.abs(fraccionunode.value);
              //  valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + "<a>-</a><div class='fraction'><span class='fup' ><i><input id='vv' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '   readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='vva' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' readonly> </input></i></span></div>";
               // var vv = document.getElementById("vv");
                //var vva = document.getElementById("vva");
               // vv.value = Math.abs(fracciondem.value);
                //vva.value = Math.abs(fracciondem1.value);

            } else {
                vamoaver1
       .innerHTML =
       "<div class='fraction'><span class='fup' ><i><input id='ju' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='je' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                var ju = document.getElementById("ju");
                var je = document.getElementById("je");
                ju.value = fraccionuno.value;
                je.value = fraccionunode.value;
              //  valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + "<div class='fraction'><span class='fup' ><i><input id='vv' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='vva' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
               // var vvj = document.getElementById("vv");
                //var vvaj = document.getElementById("vva");
                //vvj.value = fracciondem.value;
                //vvaj.value = fracciondem1.value;
                valorposicion
                      .innerHTML =
                      "x(0)=" + "x<sub>0</sub>= " + "<div class='fraction'><span class='fup' ><i><input id='valpo1' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='valjo' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                var varposi = document.getElementById("valpo1");
                var varposix = document.getElementById("valjo");
                varposi.value = fraccionuno.value;
                varposix.value = fraccionunode.value;
            }


        }



        //dos
        if (nomi - Math.floor(nomi) === 0) {
            if (nomi != 0) {
                if (nomi == 1) {
                    vamoaver2.innerHTML = "+ t<sup>2</sup>";

                }

                else if (nomi == -1) {
                    vamoaver2.innerHTML = "- t<sup>2</sup>";
                }

                else {
                    if (nomi < 0) {
                        vamoaver2.innerHTML = nomi.toString() + " t<sup>2</sup>";
                    } else {
                        vamoaver2.innerHTML = "+"+nomi.toString() + " t<sup>2</sup>";
                    }
                }
               // vamoaver2.innerHTML = nomi.toString();
               // valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + nomi.toString();
            }

            else {
                vamoaver2.innerHTML = "";
               // valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= 0";
            }

        }
        else {
            if (fracciondos.value < 0 || fracciondosde.value < 0) {
                vamoaver2
                    .innerHTML =
                    "<a> - </a> <div class='fraction'><span class='fup' ><i><input id='js' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='so' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>t<sup>2</sup>";
                var qi = document.getElementById("js");
                var io = document.getElementById("so");
                io.value = Math.abs(fracciondosde.value);
                qi.value = Math.abs(fracciondos.value);

               // valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + "<a> - </a> <div class='fraction'><span class='fup' ><i><input id='valpo' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='valso' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                //var varpo = document.getElementById("valpo");
                //var varpofa = document.getElementById("valso");
               // varpo.value = Math.abs(fraccionnom1.value);
               // varpofa.value = Math.abs(fraccionnom.value);
            }
            else {
                vamoaver2
                .innerHTML =
                "<a> + </a> <div class='fraction'><span class='fup' ><i><input id='ji' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='jo' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span> </div>t<sup>2</sup>";
                var ji = document.getElementById("ji");
                var jo = document.getElementById("jo");
                ji.value = fracciondos.value;
                jo.value = fracciondosde.value;
               // valorposicion
              // .innerHTML =
             //  "x(0)=" + "x<sub>0</sub>= " + "<div class='fraction'><span class='fup' ><i><input id='valpo1' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='valjo' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
              //  var varposi = document.getElementById("valpo1");
            //    var varposix = document.getElementById("valjo");
              //  varposi.value = fraccionnom.value;
            //    varposix.value = fraccionnom1.value;
            }


        }


        //tres

        if (nominatre - Math.floor(nominatre) === 0) {
            if (nominatre != 0) {
                if (nominatre == 1) {
                    vamoaver3.innerHTML = "+t";
                    valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= 1";

                }
                else if (nominatre == -1) {
                    vamoaver3.innerHTML = "-t";
                    valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= -1";
                } else {
                    if (nominatre < 0) {
                        vamoaver3.innerHTML = nominatre.toString() + "t";
                        valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= "+nominatre.toString();
                    } else {
                        vamoaver3.innerHTML = "+" + nominatre.toString() + "t";
                        valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + nominatre.toString();
                    }


                }
                // vamoaver2.innerHTML = nomi.toString();
                // valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + nomi.toString();
            }



            else {
                vamoaver3.innerHTML = "";
                // valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= 0";
                valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= 0";
            }

        } else {
            if (fracciontres.value < 0 || fracciontresde.value < 0) {
                vamoaver3
                    .innerHTML =
                    "<a> - </a> <div class='fraction'><span class='fup' ><i><input id='jsss' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='sooo' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>t";
                var qii = document.getElementById("jsss");
                var ioo = document.getElementById("sooo");
                ioo.value = Math.abs(fracciontresde.value);
                qii.value = Math.abs(fracciontres.value);

                valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + "<a>-</a><div class='fraction'><span class='fup' ><i><input id='vv' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '   readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='vva' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' readonly> </input></i></span></div>";
                var vv = document.getElementById("vv");
                var vva = document.getElementById("vva");
                vv.value = Math.abs(fracciontres.value);
                vva.value = Math.abs(fracciontresde.value);

                // valorposicion.innerHTML = "x(0)=" + "x<sub>0</sub>= " + "<a> - </a> <div class='fraction'><span class='fup' ><i><input id='valpo' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='valso' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                //var varpo = document.getElementById("valpo");
                //var varpofa = document.getElementById("valso");
                // varpo.value = Math.abs(fraccionnom1.value);
                // varpofa.value = Math.abs(fraccionnom.value);
            }
            else {
                vamoaver3
                .innerHTML =
                "<a> + </a> <div class='fraction'><span class='fup' ><i><input id='jiii' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='jooo' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>t";
                var jiii = document.getElementById("jiii");
                var jooo = document.getElementById("jooo");
                jiii.value = fracciontres.value;
                jooo.value = fracciontresde.value;

                valorvelocidad.innerHTML = "v(0)=" + "v<sub>0</sub>= " + "<div class='fraction'><span class='fup' ><i><input id='vv' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='vva' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                var vvj = document.getElementById("vv");
                var vvaj = document.getElementById("vva");
                vvj.value = fracciontres.value;
                vvaj.value = fracciontresde.value;
                // valorposicion
                // .innerHTML =
                //  "x(0)=" + "x<sub>0</sub>= " + "<div class='fraction'><span class='fup' ><i><input id='valpo1' type='number' min='-99' max='99'   style='text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; '  readonly> </input> </i></span><span class='bar'>/</span><span class='fdn' ><i><input id='valjo' type='number'  min='1' max='99' style='text-align: center ;width:50px ; border: none;' value='2' readonly> </input></i></span></div>";
                //  var varposi = document.getElementById("valpo1");
                //    var varposix = document.getElementById("valjo");
                //  varposi.value = fraccionnom.value;
                //    varposix.value = fraccionnom1.value;
            }


        }

      //  velocityFunction.a = parseFloat(deno);
       // positionFunction = velocityFunction.integrate(nomi);
        // updateFunction();


        quadraticFunction.a = parseFloat(nomi);
        quadraticFunction.c = parseFloat(deno);
        quadraticFunction.b = parseFloat(nominatre);
        linearFunction = quadraticFunction.derivate();
        updateAll();
        }
    }








    //UpInput
  /*  function updateFromNumber() {
        if (firstUpdate) {
            firstUpdate = false;
            quadraticFunction.a = parseFloat(numberField3.value);
            quadraticFunction.c = parseFloat(numberField.value);
            quadraticFunction.b = parseFloat(numberField2.value);
            linearFunction = quadraticFunction.derivate();
            updateAll();
        }
        //UpTable

        function updateFromTable() {
        }
        if (firstUpdate) {
            firstUpdate = false;


            




        }
    }*/
    function Start() {
        startButton.disabled = true;
        final = parseFloat(quadraticFunction.b) + parseFloat(quadraticFunction.a * parseInt(document.getElementsByName("endTime")[0].value));
        //  alert(final);

        if (parseInt(document.getElementsByName("endTime")[0].value) < 0) {
            lado = false;
            // alert(parseInt(document.getElementsByName("endTime")[0].value));
        } else if (parseInt(document.getElementsByName("endTime")[0].value) > 0) {
            lado = true;
            //alert(parseInt(document.getElementsByName("endTime")[0].value));
        }
        currentTime = parseInt(document.getElementsByName("startTime")[0].value);

        interval = window.setInterval(Step, timeInterval);
        guidingLine = quadraticBoard.create('line',
            [[currentTime, 60], [currentTime, -60]],
            { straightFirst: false, straightLast: false, strokeWidth: 2, dash: 2, strokeColor: '#8f918f' });
        guidingLine2 = linearBoard.create('line',
            [[currentTime, 60], [currentTime, -60]],
            { straightFirst: false, straightLast: false, strokeWidth: 2, dash: 2, strokeColor: '#8f918f' });


    }

    function Step() {

        if (lado == true) {
            currentTime += timeInterval / 10000;
            if (currentTime >= parseInt(document.getElementsByName("endTime")[0].value)) {
                clearInterval(interval);
                quadraticBoard.removeObject(guidingLine);
                linearBoard.removeObject(guidingLine2);
                startButton.disabled = false;
                //sliderBox.update();
            }
            else {
                value = quadraticFunction.evaluate(currentTime);
                slider.setValue(value);
                sliderBox.update();
                quadraticBoard.removeObject(guidingLine);
                linearBoard.removeObject(guidingLine2);
                guidingLine = quadraticBoard.create('line',
                    [[currentTime, 60], [currentTime, -60]],
                    { straightFirst: false, straightLast: false, strokeWidth: 2, dash: 3, strokeColor: '#cecece' });
                guidingLine2 = linearBoard.create('line',
                [[currentTime, 60], [currentTime, -60]],
                { straightFirst: false, straightLast: false, strokeWidth: 2, dash: 3, strokeColor: '#cecece' });
            }

        } else if (!lado) {
            currentTime -= timeInterval / 10000;
            if (currentTime <= parseInt(document.getElementsByName("endTime")[0].value)) {
                clearInterval(interval);
                quadraticBoard.removeObject(guidingLine);
                linearBoard.removeObject(guidingLine2);
                startButton.disabled = false;
            } else {
                value = quadraticFunction.evaluate(currentTime);
                slider.setValue(value);
                sliderBox.update();
                quadraticBoard.removeObject(guidingLine);
                linearBoard.removeObject(guidingLine2);
                guidingLine = quadraticBoard.create('line',
                    [[currentTime, 60], [currentTime, -60]],
                    {
                        straightFirst: false,
                        straightLast: false,
                        strokeWidth: 2,
                        dash: 3,
                        strokeColor: '#cecece'
                    });
                guidingLine2 = linearBoard.create('line',
                    [[currentTime, 60], [currentTime, -60]],
                    {
                        straightFirst: false,
                        straightLast: false,
                        strokeWidth: 2,
                        dash: 3,
                        strokeColor: '#cecece'
                    });
            }
        }


    }
  

    var quadraticFunction = new QuadraticFunction(0.5, 0, 0);
    var linearFunction = new LinearFunction(1, 0);

    var FormulaDiv = document.getElementById("FormulaDisplayDiv");

    
    JXG.Options.axis.ticks.majorHeight = 40;
    JXG.Options.axis.ticks.minorHeight = 15;
    JXG.Options.axis.ticks.minorTicks = 5;
    JXG.Options.axis.ticks.strokeOpacity = 0.40;
    JXG.Options.axis.ticks.ticksDistance = 1;
    JXG.Options.axis.ticks.insertTicks = false;
    JXG.Options.axis.ticks.strokeColor = '#666666';
    JXG.Options.axis.ticks.label.offset = [-12 + 3, 4];
    JXG.Options.axis.ticks.label.layer = 9;
    JXG.Options.axis.margin = -4;
    JXG.Options.axis.ticks.tickEndings = [0, 1];
    JXG.Options.axis.ticks.highlightStrokeColor = '#888888';
    JXG.Options.axis.highlightStrokeColor = '#2c64b2';
    JXG.Options.axis.strokeColor = '#2c64b2';
    JXG.Options.axis.strokeWidth = .8;
    JXG.Options.axis.ticks.strokeWidth = 1;
    JXG.Options.axis.highlightStrokeWidth = 1;

    var quadraticBoard = JXG.JSXGraph.initBoard('PositionBoard', {
        boundingbox: [minX, maxY, maxX, minY],
        axis: true,
        grid: true,
        shownavigation: true,
        keepAspectRatio: true,
        showClearTraces: true,
        keepaspectratio: false, zoom: {
            factorX: 1.25,
            factorY: 1.25,
            wheel: true,
            needshift: true,
            eps: 0.1
        }
    });
    quadraticBoard.create('text', [-0.3, 8.3, "x"], { fontSize: 20 });
    quadraticBoard.create('text', [8.5, -0.5, "t"], { fontSize: 20 });
    JXG.Options.axis.ticks.majorHeight = 40;
    JXG.Options.axis.ticks.minorHeight = 15;
    JXG.Options.axis.ticks.minorTicks = 5;
    JXG.Options.axis.ticks.strokeOpacity = 0.40;
    JXG.Options.axis.ticks.ticksDistance = 1;
    JXG.Options.axis.ticks.insertTicks = false;
    JXG.Options.axis.ticks.strokeColor = '#666666';
    JXG.Options.axis.ticks.label.offset = [-12 + 3, 4];
    JXG.Options.axis.ticks.label.layer = 9;
    JXG.Options.axis.margin = -4;
    JXG.Options.axis.ticks.tickEndings = [0, 1];
    JXG.Options.axis.ticks.highlightStrokeColor = '#888888';
    JXG.Options.axis.highlightStrokeColor = '#2c64b2';
    JXG.Options.axis.strokeColor = '#2c64b2';
    JXG.Options.axis.strokeWidth = .8;
    JXG.Options.axis.ticks.strokeWidth = 1;
    JXG.Options.axis.highlightStrokeWidth = 1;
    var linearBoard = JXG.JSXGraph.initBoard('VelocityBoard', {
        boundingbox: [minX, maxY, maxX, minY], axis: true,
        grid: true,
        shownavigation: true,
        keepAspectRatio: true,
        showClearTraces: true,
        keepaspectratio: false, zoom: {
            factorX: 1.25,
            factorY: 1.25,
            wheel: true,
            needshift: true,
            eps: 0.1
        }
    });
    linearBoard.create('text', [-0.3, 8.3, "v"], { fontSize: 20 });
    linearBoard.create('text', [8.5, -0.5, "t"], { fontSize: 20 });
    
    JXG.Options.axis.ticks.minorHeight = 8;
    JXG.Options.axis.ticks.minorTicks = 5;
    JXG.Options.axis.ticks.majorHeight = 20;
    JXG.Options.axis.ticks.insertTicks = false;
    JXG.Options.axis.ticks.ticksDistance =1;
    JXG.Options.axis.ticks.strokeWidth = 2.5;
    JXG.Options.axis.ticks.tickEndings =[0,2];


    var sliderBox = JXG.JSXGraph.initBoard('sliderBox', {
        boundingbox: [-2,- 0.01, 9, 0.01], axis: true, grid: true, shownavigation: true, keepAspectRatio: true, showClearTraces: true, keepaspectratio: false, zoom: {
            factorX: 1.25,
            factorY: 1.25,
            wheel: true,
            needshift: true,
            eps: 0.1
        },
       
    });
    var frente = '@Url.Content("~/Content/images/nuevogif.gif")';

    var camina = '@Url.Content("~/Content/images/nuevocam.gif")';
    var volt = '@Url.Content("~/Content/images/volte.gif")';
    var inverso = '@Url.Content("~/Content/images/nuevoinver.gif")';



    // var slider = sliderBox.create('slider', [urlImg,[1,1],[1,1] ]);
    var slider = sliderBox.create('slider', [[-50, 0], [50, 0], [-50, 0, 50]], { size: 3, opacity: 0.5, ticks: { drawLabels: false, highlight: true } });
    var im = sliderBox.create('image',
    [
        function () {
            if (slider.X() == 0) {
                return frente;
            }
            else if (slider.X() > 0 && slider.X() < 0.15) {
                return volt;
            }
            else if (slider.X() > 0.15 && slider.X() < (final - 0.01)) {
                return camina;
            }
            else if (slider.X() < 0.15 && slider.X() > (final + 0.01)) {
                return inverso;
            }
            else {
                return frente;
            }



        },
        [function () { return slider.X() - 0.55; }, function () { return slider.Y(); }], [1, 0.01]

    ]);

    function SnapToGrid(x,y) {
        return [Math.round(x * 100) / 100, Math.round(y * 100) / 100];
    }

    quadraticBoard.infobox.distanceX = 20;
    quadraticBoard.infobox.distanceY = 15;
    linearBoard.infobox.distanceX = 20;
    linearBoard.infobox.distanceY = 15;
    quadraticPoint = quadraticBoard.create('point', [0, 0], { size: 2, name: "", color: "Blue"});
    linearIntPoint = linearBoard.create('point', [0, 0], { size: 2, name: "", color: "Red" });
    linearSlopePoint = linearBoard.create('point', [1, 1], { size: 2, name: "", color: "Red", showInfobox: false });

    linearBoard.highlightInfobox = function (x, y, el) {
        linearBoard.infobox.setText('(' + el.X().toFixed(1) + ', ' + fracciontres.value+'/'+fracciontresde.value + ')');
    };

    quadraticBoard.highlightInfobox = function (x, y, el) {
        quadraticBoard.infobox.setText('(  0,'+fraccionuno.value+'/'+fraccionunode.value+')');
    };

    quadraticPoint.on(
        'drag',
        function() { quadraticPoint.moveTo(SnapToGrid( 0, quadraticPoint.Y())) }
    );

    var offset = 1;

    linearIntPoint.on(
        'drag',
        function() {
            linearSlopePoint.moveTo(SnapToGrid(linearSlopePoint.X(), linearIntPoint.Y() + offset));
            linearIntPoint.moveTo(SnapToGrid( 0, linearIntPoint.Y() )); }
    );

    linearSlopePoint.on(
        'drag',
        function () {
            linearSlopePoint.moveTo(SnapToGrid(linearSlopePoint.X(),linearSlopePoint.Y()));
            offset = linearSlopePoint.Y() - linearIntPoint.Y();}
    );

    quadraticBoard.create(
        'functiongraph',
        [function (x) {return quadraticFunction.evaluate(x);}],
        {strokeColor: "Blue"}
    );

    linearBoard.create(
        'functiongraph',
        [function (x) {return linearFunction.evaluate(x);}],
        {strokeColor: "Red"}
    );

    function updateFunctionFromGraph() {
        if (firstUpdate) {
            firstUpdate = false;
            linearFunction.a = (linearSlopePoint.Y() - linearIntPoint.Y()) / linearSlopePoint.X();
            linearFunction.b = linearIntPoint.Y();
            quadraticFunction = linearFunction.integrate(quadraticPoint.Y());


            updatehead();
        }
    }

    function updatehead(parameters) {
        var azulp = quadraticFunction.c;
        var rojp = linearFunction.b;
        var rojp1 =linearFunction.evaluate(1);
         // alert(azulp);
        simplifica(azulp * 100, 100);
        
       // headk.innerHTML = azulp + "-" + rojp + "-" + rojp1;
       
    }

    function simplifica(nz, dz) {
        var dividir=0;
        var i;
        for ( i =2 ; i <= nz; i++) {
           
            if(nz%i==0)
        {
                if(dz%i==0)
        {
                    dividir=i;
                    break;
        } 
    }
    }
       
    if(dividir!=0)
    {
        simplifica(nz/dividir,dz/dividir);
    }
    else {
        fraccionuno.value = nz;
        fraccionunode.value = dz;
        updateFromNumberfraction();
    }
    updateAll();
    }

    function updateAll() {
        //updateFromNumberfraction();
        
        updateGraphs();
       // updateFields();
      //  updateText();
      //  updateTable();
        firstUpdate = true;
    }

   

    /*function updateTable() {
        numtable.value = linearIntPoint.Y();
        numtable2.value = linearSlopePoint.Y();
        numtable3.value = quadraticPoint.Y();
    }*/
    
   /* function updateFields() {
        numberField3.value = quadraticFunction.a;
        numberField.value = quadraticFunction.c;
        numberField2.value = quadraticFunction.b;
        numberField3.value = Math.round(numberField3.value * 100) / 100;
        numberField.value = Math.round(numberField.value * 100) / 100;
        numberField2.value = Math.round(numberField2.value * 100) / 100;
    }

    function updateText() {
        FormulaDiv.innerHTML = quadraticFunction.ToString();
    }*/

    function updateGraphs() {

        quadraticBoard.suspendUpdate();
        linearBoard.suspendUpdate();
        quadraticPoint.moveTo(SnapToGrid(0, quadraticFunction.c));
        linearIntPoint.moveTo(SnapToGrid(0, linearFunction.b));
        linearSlopePoint.moveTo(SnapToGrid(1, linearFunction.evaluate(1)));
        quadraticBoard.unsuspendUpdate();
        linearBoard.unsuspendUpdate();
        
    }
    updateFromNumberfraction();
    updateFunctionFromGraph();
    quadraticBoard.on('update', updateFunctionFromGraph);
    linearBoard.on('update', updateFunctionFromGraph);
</script>



