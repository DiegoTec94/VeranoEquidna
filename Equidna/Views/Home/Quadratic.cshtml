@{
    ViewBag.Title = "Modelo cuadrático (Sin decimales)";
}

<h1 align="center">Modelo cuadrático</h1>
<div><h1 id="FormulaDisplayDiv" style="text-align: center; font-family: 'Walter Turncoat', cursive; font-size: 250%"> </h1></div>

<div class="eq-c" align="center" style="font-family: 'Walter Turncoat', cursive; font-size: 250%">
    <i>x</i>(t) =
    <div class="fraction" id="vamoaver2">

    </div>
    +
    <div class="fraction" id="vamoaver">

    </div>
    t
</div>
<!--
<div class="col-xs-12 " align="center">
    <input id="number3" type="number" step="0.01" onchange="updateFromNumber();" />
    <input id="number2" type="number" step="0.01" onchange="updateFromNumber();" />
    <input id="number" type="number" step="0.01" onchange="updateFromNumber();" />
</div>
-->
<div class="eq-c styc" align="center" data-toggle="validator">
    <i>x</i>(t) =
    <div class="fraction">
        <span class="fup" id="nuevo"><i><input id="nom1" type="number" min="-99" max="99" style="text-align: center;  width:50px;  border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0; " onchange="updateFromNumberfraction();" value="1"/> </i></span>

        <span class="fdn" id="nuevo2"><i><input id="nom2" type="number" min="1" max="99" style="text-align: center;  width:50px; border: none " onchange="updateFromNumberfraction();" value="1"/></i></span>
    </div>
    +
    <div class="fraction">
        <span class="fup" id="nuevo3"><i> <input id="den1" type="number" min="-99" max="99" style="text-align: center;width:50px; border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0;" onchange="updateFromNumberfraction();" value="1" /></i></span>

        <span class="fdn" id="nuevo4"><i><input id="den2" type="number" min="1" max="99" style="text-align: center ;width:50px ; border: none;" onchange="updateFromNumberfraction();" value="1"/></i></span>
    </div>
    t<sup>2</sup>
    +
    <div class="fraction">
        <span class="fup" id="nuevo5"><i> <input id="tre1" type="number" min="-99" max="99" style="text-align: center;width:50px; border-bottom-color:black; border-top: 0; border-left: 0; border-right: 0;" onchange="updateFromNumberfraction();" value="1"/></i></span>

        <span class="fdn" id="nuevo6"><i><input id="tre2" type="number" min="1" max="99" style="text-align: center ;width:50px ; border: none;" onchange="updateFromNumberfraction();" value="1"/></i></span>
    </div>
    t
    <div class="help-block with-errors"></div>
</div>

<div class="row"></div>
<div class="row">
    <div class="col-xs-12" align="center">
        <div id="sliderBox" class="jxgbox" style="width:100%;height:100px;"></div>
        <label for="startTime">Start time: <input name="startTime" type="number" value="0" min="-99" max="99" style="text-align: center; width: 30%;" readonly /></label>
        <label for="endTime">End time: <input name="endTime" type="number" min="-99" max="99" style="text-align: center; width: 30%;" value="0" /></label>

        <button id="start" onclick="Start()" class="btn btn-7 btn-7a icon-truck">Start</button>
    </div>
   </div>
<div class="row">
    <div class="col-xs-8">
        <div id='VelocityBoard' class='jxgbox graphbox' style='user-select: none; overflow: hidden; position: relative;'></div>
    </div>
    <div class="col-xs-4">
        <div class="row">
            <div class="panel panel-default">
                <div class="panel-heading" style="border: #17aa56 3px solid;">

                    <table class="table table-striped ">
                        <thead>
                            <tr>


                                <th class="text-center" style="text-align: left; font-weight: bold; font-family: 'Swanky and Moo Moo', cursive; font-size: 130%;">
                                    VALOR INICIAL &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t=0

                                    <!--<h6 style="text-align: left; font-weight: bold; font-family: 'Swanky and Moo Moo', cursive; font-size: 120%; padding-bottom: 20px; margin-bottom: 20px;"></h6>
                                    <h1></h1><br/>-->
                                </th>
                                <th class="text-center">
                                    <div class="fraction" id="Formuvelo">

                                    </div>

                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <table class="table table-striped ">
                    <thead>
                        <tr>
                            <th class="text-center" style="background-color: red;
color: white;">t</th>
                            <th class="text-center" style="background-color: red;
color: white;">v</th>

                        </tr>
                    </thead>
                    <tbody style="border: #17aa56 3px solid;">
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x1" name='x1' step="0.01" class="form-control" style="text-align: center" />


                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx1" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x2" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx2" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x3" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx3" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x4" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx4" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x5" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx5" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x6" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx6" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x7" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx7" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="x8" name='x1' step="0.01" class="form-control" style="text-align: center" />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="hx8" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
    
<div class="row">
    <div class="col-xs-8">
        <div id='PositionBoard' class='jxgbox graphbox' style='user-select: none; overflow: hidden; position: relative;'></div>
    </div>
    <div class="col-xs-4">
        <div class="row">
            <div class="panel panel-default">
                <div class="panel-heading" style="border: #17aa56 3px solid;">

                    <table class="table table-striped ">
                        <thead>
                            <tr>

                                <th class="text-center" style="font-family: 'Swanky and Moo Moo', cursive; font-size: 125%;">VALOR INICIAL
                                    <div class="fraction" id="Formuposi">

                                    </div>

                                </th>
                                <th class="text-center" style="font-family: 'Swanky and Moo Moo', cursive; font-size: 100%; padding-left: 20%">
                                    t=0
                                    <!--<h6 style="text-align: center; font-weight: bold"> </h6>-->

                                </th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <table class="table table-striped ">
                    <thead>
                        <tr>
                            <th class="text-center" style="background-color: blue; color: white;">x</th>
                            <th class="text-center" style="background-color: blue; color: white;">t</th>

                        </tr>
                    </thead>
                    <tbody style="border: #17aa56 3px solid;">
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy1" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y1" name='x1' step="0.01" class="form-control" style="text-align: center" />

                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy2" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y2" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy3" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y3" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy4" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y4" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy5" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y5" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy6" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y6" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy7" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />

                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y7" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-xs-6">
                                <input type="number" id="hy8" name='x1' step="0.01" class="form-control" style="text-align: center" readonly />
                            </td>

                            <td class="col-xs-6">
                                <input type="number" id="y8" name='x1' step="0.01" class="form-control" style="text-align: center" />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>

<script type='text/javascript'>
    
    //fraction;
    var fracciondem = document.getElementById("den1");
    var fracciondem1 = document.getElementById("den2");
    var fraccionnom = document.getElementById("nom1");
    var fraccionnom1 = document.getElementById("nom2");
    var fracciontre = document.getElementById("tre3");
    var fracciontre1 = document.getElementById("tre3");
    var vamoaver = document.getElementById("vamoaver");
    var vamoaver2 = document.getElementById("vamoaver2");
    var vamoaver3 = document.getElementById("vamoaver3");



    function updateFromNumberfraction() {
        var deno = parseFloat(fracciondem.value / fracciondem1.value);
        var nomi = parseFloat(fraccionnom.value / fraccionnom1.value);
        var tre = parseFloat(fracciontre.value / fracciontre1.value);
        alert(nomi+" hola");
        
        if (deno - Math.floor(deno) === 0) {
            
            vamoaver.innerHTML = deno.toString();
            
        } else {
            
            vamoaver.innerHTML = "<span class='fup' ><i>" + fracciondem.value + " </i></span><span class='bar'>/</span><span class='fdn' ><i>" + fracciondem1.value + "</i></span>";
            
        }
        if (nomi - Math.floor(nomi) === 0) {
            alert("uno bien");
            vamoaver2.innerHTML = nomi.toString();
        } else {
            alert("dos bien");
            vamoaver2.innerHTML ="<span class='fup' ><i>" + fraccionnom.value + "</i></span><span class='bar'>/</span><span class='fdn' ><i> " + fraccionnom1.value + "</i></span>";
        }
        if (tre - Math.floor(tre) === 0) {
            vamoaver3.innerHTML = tre.toString();
        } else {
            vamoaver3.innerHTML =
                "<span class='fup' ><i>" + fracciontre.value + "</i></span><span class='bar'>/</span><span class='fdn' ><i> " + fracciontre1.value + "</i></span>";
        }

       /* velocityFunction.a = parseFloat(deno);
        positionFunction = velocityFunction.integrate(nomi);
        updateFunction();*/
    }

    function updateformhtml(parameters) {
        if (visua == true) {
            vamoaver.innerHTML = velocityFunction.a;
            vamoaver2.innerHTML = positionFunction.b;
            fracciondem.value = 1;
            fracciondem1.value = 1;
            fraccionnom.value = 0;
            fraccionnom1.value = 1;
        }

        // FormulaDiv.innerHTML = "x(t)=" + positionFunction.ToString();
        if (velocityFunction.a - Math.floor(velocityFunction.a) == 0) {
            Formulavelo.innerHTML = velocityFunction.a.toString();
        } else {
            Formulavelo
                .innerHTML =
                "<span class='fup' ><i>" + fracciondem.value + " </i></span><span class='bar'>/</span><span class='fdn' ><i>" + fracciondem1.value + "</i></span>";
        }
        if (positionFunction.b - Math.floor(positionFunction.b) == 0) {
            Formulapos.innerHTML = "Valor Inicial &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=" + positionFunction.b.toString();
        } else {
            Formulapos
                .innerHTML =
               "<span class='fup' ><i>" + fraccionnom.value + " </i></span><span class='bar'>/</span><span class='fdn' ><i>" + fraccionnom1.value + "</i></span>";
        }

        // Formulavelo.innerHTML = "v=" + velocityFunction.a;
        // Formulapos.innerHTML = "Valor Inicial &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=" + positionFunction.b;

    }

    function updateFunction() {

        // velocityFunction.a = constantPoint.Y();

        //positionFunction = velocityFunction.integrate(linearPoint.Y());

        updateGraphs();
        positionBoard.removeObject(pintarPuntos);
        positionBoard.removeObject(pintarotrosPuntos);

        //velocityBoard.removeObject(pintarPuntos);
        //velocityBoard.removeObject(pintarotrosPuntos);
        //form


        //input
        updatenumerfield();
        //table
        // updatetablenum();
        //text html
        updateformhtml();
        visua = false;
        //positionBoard.update();
        //velocityBoard.update();
        updateform2();
        updateform();
        //form2

        // updateFromNumberfraction();
        checar();

        positionBoard.update();
        velocityBoard.update();

    }

    var currentTime = 0;
    var interval;
    var timeInterval = 50;
    var guidingLine;
    var maxX = 9, minX = -1, maxY = 9, minY = -2;
    var startButton = document.getElementById("start");
    var numberField = document.getElementById("number");
    var numberField2 = document.getElementById("number2");
    var numberField3 = document.getElementById("number3");
    var numtable = document.getElementById("table1");
    var numtable2 = document.getElementById("table2");
    var numtable3 = document.getElementById("table3");
    var value;



    var firstUpdate = true;
    //UpInput
    function updateFromNumber() {
        if (firstUpdate) {
            firstUpdate = false;
            quadraticFunction.a = parseFloat(numberField3.value);
            quadraticFunction.c = parseFloat(numberField.value);
            quadraticFunction.b = parseFloat(numberField2.value);
            linearFunction = quadraticFunction.derivate();
            updateAll();
        }
        //UpTable

        function updateFromTable() {
    }
        if (firstUpdate) {
            firstUpdate = false;


            




        }
    }

    function Start()
    {
        startButton.disabled = true;
        currentTime = parseInt(document.getElementsByName("startTime")[0].value);
        interval = window.setInterval(Step, timeInterval);
        guidingLine = quadraticBoard.create('line',
            [[currentTime, minY], [currentTime, maxY]],
            { straightFirst: false, straightLast: false, strokeWidth: 2 });
    }

    function Step()
    {
        currentTime += timeInterval / 1000;
        
        if (currentTime >= parseInt(document.getElementsByName("endTime")[0].value))
        {
            clearInterval(interval);
            quadraticBoard.removeObject(guidingLine);
            startButton.disabled = false;
        }
        else
        {
            value = quadraticFunction.evaluate(currentTime);
            slider.setValue(value);
            sliderBox.update();

            quadraticBoard.removeObject(guidingLine);
            guidingLine = quadraticBoard.create('line',
                [[currentTime, minY], [currentTime, maxY]],
                { straightFirst: false, straightLast: false, strokeWidth: 2 });

        }
    }

    var quadraticFunction = new QuadraticFunction(0.5, 0, 0);
    var linearFunction = new LinearFunction(1, 0);

    var FormulaDiv = document.getElementById("FormulaDisplayDiv");

    var quadraticBoard = JXG.JSXGraph.initBoard('PositionBoard', {
        boundingbox: [minX, maxY, maxX, minY],
        axis: true,
        grid: true,
        shownavigation: true,
        keepAspectRatio: true,
        showClearTraces: true,
        keepaspectratio: false, zoom: {
            factorX: 1.25,
            factorY: 1.25,
            wheel: true,
            needshift: true,
            eps: 0.1
        }
    });
    var linearBoard = JXG.JSXGraph.initBoard('VelocityBoard', {
        boundingbox: [minX, maxY, maxX, minY], axis: true,
        grid: true,
        shownavigation: true,
        keepAspectRatio: true,
        showClearTraces: true,
        keepaspectratio: false, zoom: {
            factorX: 1.25,
            factorY: 1.25,
            wheel: true,
            needshift: true,
            eps: 0.1
        }
    });

    var sliderBox = JXG.JSXGraph.initBoard('sliderBox', { boundingbox: [-(minY * (maxX - minX)), 5, minY * (maxX - minX), -5], axis: false, grid: true, shownavigation: true, showCopyright: false, keepAspectRatio: true });
    var urlImg = "https://vignette4.wikia.nocookie.net/kirby/images/0/01/Kirby_Artwork_Caminando_%28KA%29.png/revision/latest?cb=20100808233646";
    // var slider = sliderBox.create('slider', [urlImg,[1,1],[1,1] ]);
    var slider = sliderBox.create('slider', [[-(minY * (maxX - minX)), 0], [(minY * (maxX - minX)), 0], [(minY * (maxX - minX)), 0, -(minY * (maxX - minX))]], { ticks: { drawLabels: false, highlight: false, size: 5, opacity: 0.3 } });
    var im = sliderBox.create('image', [urlImg, [function () { return slider.X(); }, function () { return slider.Y(); }], [5, 5]]);
    // var im = sliderBox.create('image', [], [function() { return slider.X(); }], [1, 1]]);

    function SnapToGrid(x,y) {
        return [Math.round(x * 100) / 100, Math.round(y * 100) / 100];
    }

    quadraticPoint = quadraticBoard.create('point', [0, 0], { size: 2, name: "", color: "Blue" });
    linearIntPoint = linearBoard.create('point', [0, 0], { size: 2, name: "", color: "Red" });
    linearSlopePoint = linearBoard.create('point', [1, 1], { size: 2, name: "", color: "Red" });

    linearBoard.highlightInfobox = function (x, y, el) {
        linearBoard.infobox.setText('(' + el.X().toFixed(2) + ', ' + el.Y().toFixed(2) + ')');
    };

    quadraticBoard.highlightInfobox = function (x, y, el) {
        quadraticBoard.infobox.setText('(' + el.X().toFixed(2) + ', ' + el.Y().toFixed(2) + ')');
    };

    quadraticPoint.on(
        'drag',
        function() { quadraticPoint.moveTo(SnapToGrid( 0, quadraticPoint.Y())) }
    );

    var offset = 1;

    linearIntPoint.on(
        'drag',
        function() {
            linearSlopePoint.moveTo(SnapToGrid(linearSlopePoint.X(), linearIntPoint.Y() + offset));
            linearIntPoint.moveTo(SnapToGrid( 0, linearIntPoint.Y() )); }
    );

    linearSlopePoint.on(
        'drag',
        function () {
            linearSlopePoint.moveTo(SnapToGrid(linearSlopePoint.X(),linearSlopePoint.Y()));
            offset = linearSlopePoint.Y() - linearIntPoint.Y();}
    );

    quadraticBoard.create(
        'functiongraph',
        [function (x) {return quadraticFunction.evaluate(x);}],
        {strokeColor: "Blue"}
    );

    linearBoard.create(
        'functiongraph',
        [function (x) {return linearFunction.evaluate(x);}],
        {strokeColor: "Red"}
    );

    function updateFunctionFromGraph() {
        if (firstUpdate) {
            firstUpdate = false;
            linearFunction.a = (linearSlopePoint.Y() - linearIntPoint.Y()) / linearSlopePoint.X();
            linearFunction.b = linearIntPoint.Y();
            quadraticFunction = linearFunction.integrate(quadraticPoint.Y());

            updateAll();
        }
    }

    function updateAll() {
        updateGraphs();
        updateFields();
        updateText();
        updateTable();
        firstUpdate = true;
    }


    function updateTable() {
        numtable.value = linearIntPoint.Y();
        numtable2.value = linearSlopePoint.Y();
        numtable3.value = quadraticPoint.Y();
    }
    
    function updateFields() {
        numberField3.value = quadraticFunction.a;
        numberField.value = quadraticFunction.c;
        numberField2.value = quadraticFunction.b;
        numberField3.value = Math.round(numberField3.value * 100) / 100;
        numberField.value = Math.round(numberField.value * 100) / 100;
        numberField2.value = Math.round(numberField2.value * 100) / 100;
    }

    function updateText() {
        FormulaDiv.innerHTML = quadraticFunction.ToString();
    }

    function updateGraphs() {
        quadraticBoard.suspendUpdate();
        linearBoard.suspendUpdate();
        quadraticPoint.moveTo(SnapToGrid(0, quadraticFunction.c));
        linearIntPoint.moveTo(SnapToGrid(0, linearFunction.b));
        linearSlopePoint.moveTo(SnapToGrid(1, linearFunction.evaluate(1)));
        quadraticBoard.unsuspendUpdate();
        linearBoard.unsuspendUpdate();
    }

    updateFunctionFromGraph();
    quadraticBoard.on('update', updateFunctionFromGraph);
    linearBoard.on('update', updateFunctionFromGraph);
</script>



